// Generated by view binder compiler. Do not edit!
package com.example.alcantara_javier_s1934603_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.ViewSwitcher;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.alcantara_javier_s1934603_android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapsBinding implements ViewBinding {
  @NonNull
  private final ViewSwitcher rootView;

  @NonNull
  public final TextView acknowledgement;

  @NonNull
  public final Button clearDateButton;

  @NonNull
  public final EditText filter;

  @NonNull
  public final Button hideMapButton;

  @NonNull
  public final ListView listIncidents;

  @NonNull
  public final ListView listRoadWorks;

  @NonNull
  public final Button pickDButton;

  @NonNull
  public final Button pickDPlannerButton;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView salutation;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView screen1Label;

  @NonNull
  public final Button showMapButton;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvJourneyPlanner;

  @NonNull
  public final Spinner vSpinner;

  @NonNull
  public final ViewSwitcher vwSwitch;

  @NonNull
  public final ViewSwitcher vwSwitch2;

  private ActivityMapsBinding(@NonNull ViewSwitcher rootView, @NonNull TextView acknowledgement,
      @NonNull Button clearDateButton, @NonNull EditText filter, @NonNull Button hideMapButton,
      @NonNull ListView listIncidents, @NonNull ListView listRoadWorks, @NonNull Button pickDButton,
      @NonNull Button pickDPlannerButton, @NonNull ProgressBar progressBar,
      @NonNull TextView salutation, @Nullable TextView screen1Label, @NonNull Button showMapButton,
      @Nullable TextView tvJourneyPlanner, @NonNull Spinner vSpinner,
      @NonNull ViewSwitcher vwSwitch, @NonNull ViewSwitcher vwSwitch2) {
    this.rootView = rootView;
    this.acknowledgement = acknowledgement;
    this.clearDateButton = clearDateButton;
    this.filter = filter;
    this.hideMapButton = hideMapButton;
    this.listIncidents = listIncidents;
    this.listRoadWorks = listRoadWorks;
    this.pickDButton = pickDButton;
    this.pickDPlannerButton = pickDPlannerButton;
    this.progressBar = progressBar;
    this.salutation = salutation;
    this.screen1Label = screen1Label;
    this.showMapButton = showMapButton;
    this.tvJourneyPlanner = tvJourneyPlanner;
    this.vSpinner = vSpinner;
    this.vwSwitch = vwSwitch;
    this.vwSwitch2 = vwSwitch2;
  }

  @Override
  @NonNull
  public ViewSwitcher getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_maps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acknowledgement;
      TextView acknowledgement = ViewBindings.findChildViewById(rootView, id);
      if (acknowledgement == null) {
        break missingId;
      }

      id = R.id.clearDateButton;
      Button clearDateButton = ViewBindings.findChildViewById(rootView, id);
      if (clearDateButton == null) {
        break missingId;
      }

      id = R.id.filter;
      EditText filter = ViewBindings.findChildViewById(rootView, id);
      if (filter == null) {
        break missingId;
      }

      id = R.id.hideMapButton;
      Button hideMapButton = ViewBindings.findChildViewById(rootView, id);
      if (hideMapButton == null) {
        break missingId;
      }

      id = R.id.listIncidents;
      ListView listIncidents = ViewBindings.findChildViewById(rootView, id);
      if (listIncidents == null) {
        break missingId;
      }

      id = R.id.listRoadWorks;
      ListView listRoadWorks = ViewBindings.findChildViewById(rootView, id);
      if (listRoadWorks == null) {
        break missingId;
      }

      id = R.id.pickDButton;
      Button pickDButton = ViewBindings.findChildViewById(rootView, id);
      if (pickDButton == null) {
        break missingId;
      }

      id = R.id.pickDPlannerButton;
      Button pickDPlannerButton = ViewBindings.findChildViewById(rootView, id);
      if (pickDPlannerButton == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.salutation;
      TextView salutation = ViewBindings.findChildViewById(rootView, id);
      if (salutation == null) {
        break missingId;
      }

      id = R.id.screen1Label;
      TextView screen1Label = ViewBindings.findChildViewById(rootView, id);

      id = R.id.showMapButton;
      Button showMapButton = ViewBindings.findChildViewById(rootView, id);
      if (showMapButton == null) {
        break missingId;
      }

      id = R.id.tvJourneyPlanner;
      TextView tvJourneyPlanner = ViewBindings.findChildViewById(rootView, id);

      id = R.id.vSpinner;
      Spinner vSpinner = ViewBindings.findChildViewById(rootView, id);
      if (vSpinner == null) {
        break missingId;
      }

      ViewSwitcher vwSwitch = (ViewSwitcher) rootView;

      id = R.id.vwSwitch2;
      ViewSwitcher vwSwitch2 = ViewBindings.findChildViewById(rootView, id);
      if (vwSwitch2 == null) {
        break missingId;
      }

      return new ActivityMapsBinding((ViewSwitcher) rootView, acknowledgement, clearDateButton,
          filter, hideMapButton, listIncidents, listRoadWorks, pickDButton, pickDPlannerButton,
          progressBar, salutation, screen1Label, showMapButton, tvJourneyPlanner, vSpinner,
          vwSwitch, vwSwitch2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
